name: Terraform CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.44.1

      - name: Run TFLint
        run: |
          tflint --init
          tflint -f compact

  terraform-network:
    needs: security-scan
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (Network)
        run: terraform init
        working-directory: terraform/network

      - name: Terraform Apply (Network)
        run: terraform apply --auto-approve
        working-directory: terraform/network

  terraform-webserver:
    needs: terraform-network
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Generate SSH Key for Bastion
        run: ssh-keygen -t rsa -f group -N ""
        working-directory: terraform/webserver
        
      - name: Upload group private key as artifact
        uses: actions/upload-artifact@v3
        with:
          name: bastion-key
          path: terraform/webserver/group  

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (Webserver)
        run: terraform init
        working-directory: terraform/webserver

      - name: Terraform Apply (Webserver)
        run: terraform apply --auto-approve
        working-directory: terraform/webserver
        
  ansible-deployment:
    needs: terraform-webserver
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python and install Ansible & AWS modules
        run: python3 -m pip install --upgrade pip && pip install ansible boto boto3 && ansible-galaxy collection install amazon.aws

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Run Ansible playbook to download image from S3
        run: ansible-playbook ansible/playbook_getimage.yaml
          
      - name: Run Ansible playbook to configure webservers
        run: ansible-playbook -i ansible/aws_ec2.yaml ansible/playbook_webservers.yaml
